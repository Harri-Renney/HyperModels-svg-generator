int rem(int x, int y)
{
    return (x % y + y) % y;
}

__kernel
void $insertHeader$
{
	//Rotation Index into model grid//
	int gridSize = get_global_size(0) * get_global_size(1);
    
	$insertRotationIndices$
    
	//Get index for current and neighbouring nodes//
	$insertIndices$
	int t1x0y0Idx = rotation1 + ((get_global_id(1)) * get_global_size(0) + get_global_id(0));

	//Boundary condition evaluates neighbours in preperation for equation//
	//@ToDo - Make new timestep value autogenerated?//
	float t1x0y0;
	$insertVars$
	$insertBC$
	
	//Calculate the next pressure value//
	$insertEq$;
	
	//If the cell is the listener position, sets the next sound sample in buffer to value contained here//
	if(centreIdx == outputPosition)
	{
		output[idxSample]= t0x0y0;    //@ToDo - Make current timestep centre point auto generated?
	}
	
	if(centreIdx == inputPosition)	//If the position is an excitation...
	{
		t1x0y0 += input[idxSample];	//Input excitation value into point. Then increment to next excitation in next iteration.
	}
	
	modelGrid[t1x0y0Idx] = t1x0y0;
}